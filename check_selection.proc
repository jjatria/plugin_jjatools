# Check selection for unbalance: returns 1 if there is an equal
# number of selected objects of each type; 0 if not; and -1 if there
# is no selection.
#
# Usage:
#	include /path/to/this/script
#	[code]
#	call checksel KEEP
#	if checkSelection.result > 0
#		# Selection is balanced
#	elsif checksel.result = 0
#		exit Selection is unbalanced
#	elsif checksel.result < 0
#		exit There is no active selection
#	endif
#	[code]
#
# Depending on the boolean value of KEEP, a Table object with the
# amount of objects of each type that were selected will remain
# upon completion.
#
# Written by Jose J. Atria (28 February 2012)
#
# This script is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# A copy of the GNU General Public License is available at
# <http://www.gnu.org/licenses/>.

include clear_selection.proc

procedure checkSelection: .keep
  .n = numberOfSelected()

  if .n
    for .i to .n
      .selected[.i] = selected(.i)
    endfor

    .raw_table = Create Table with column names: "objects", 0, "type n id"

    for .i to .n
      selectObject: .selected[.i]
      .type$ = extractWord$(selected$(), "")
      
      selectObject: .table
      Append row
      .this_row = Get number of rows
      Set string value:  .this_row, "type", .type$
      Set numeric value: .this_row, "n",    1
      Set numeric value: .this_row, "id",   .selected[.i]
    endfor
    
    selectObject: .rawtable
    .object_table = Collapse rows: "type", "n", "", "", "", ""
    selectObject: .object_table

    .variance = Get standard deviation: "n"
    .result = if .variance = 0 then 1 else 0 fi

    if !.keep
      removeObject: .raw_table, .object_table
    endif

    # Restore original selection
    @clearSelection()
    for .i to .n
      plusObject: .selected[.i]
    endfor
  else
    .result = -1
  endif
endproc

procedure countObjects: .type$
  .row = Search column: "type", .type$
  .n = Get value: .n, "n"
endproc
