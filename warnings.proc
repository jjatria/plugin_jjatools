# To use these procedures as a standalone set (not as part
# of the plugin) replace the following line:
include selection_tools.proc
# with one like this one:
# include .praat-dir/plugin_jjatools/selection_tools.proc

# @issueWarnings() will check to see if any warning flags have been
# set, and if so, issue them. The benefit of this approach is that
# similar warnings are only issued once.
procedure issueWarnings ()
#   appendInfoLine: "issued"
  .new = 1
  if variableExists("issueWarnings.selected")
    @isSelectionTable(issueWarnings.selected)
    if isSelectionTable.return
      .new = 0
    endif
  endif
  
  if .new
    @saveSelectionTable()
    .selected = saveSelectionTable.table
#     appendInfoLine: "selected in issue", .selected
  endif

  
  if variableExists("warning.table")
    @objectExists(warning.table)
    if objectExists.return
      selectObject(warning.table)
      .issued = nowarn Extract rows where column (number): "issued", "greater than", 0
      .row = Get number of rows
      for .i to .row
        .warning$ = Get value: .i, "text"
        appendInfoLine("W: ", .warning$)
      endfor
      removeObject(warning.table, .issued)
    endif
  else
#     appendInfoLine: "no table!"
    @addWarning("NoWarningTable", "Warning table not found, created with this warning")
    @warning("NoWarningTable")
    @issueWarnings()
  endif

  @restoreSavedSelection(.selected)
  if .new
    removeObject(.selected)
#     appendInfoLine: "removed ", .selected
  else
    .new = 1 - .new
  endif
endproc

# Add warning codes and text to warning table
procedure addWarning (.code$, .text$)
#   appendInfoLine: "add warning"
  @saveSelectionTable()
  .selected = saveSelectionTable.table

  if variableExists("warning.table")
    @objectExists(warning.table)
    if objectExists.return
      nocheck selectObject(warning.table)
    endif
  endif
  if !numberOfSelected("Table")
    warning.table = Create Table with column names: "warnings", 0, "code text issued"
  endif
  
  .row = Search column: "code", .code$
  if .row
    Set string value:  .row, "text",   .text$
    Set numeric value: .row, "issued", 0
  else
    Append row
    .row = Get number of rows
    Set string value:  .row, "code",   .code$
    Set string value:  .row, "text",   .text$
    Set numeric value: .row, "issued", 0
  endif
  
#   appendInfoLine: "selected in add", .selected
  @restoreSavedSelection(.selected)
  removeObject(.selected)
#   appendInfoLine: "removed ", .selected
endproc

# @warning(code) sets a flag for a specific warning
procedure warning (.code$)
#   appendInfoLine: "flag warning"
  @saveSelectionTable()
  .selected = saveSelectionTable.table
  
  if variableExists("warning.table")
    selectObject(.table)
  else
#     appendInfoLine: "no warning table!"
    @addWarning("NoWarningTable", "Warning table not found, created with this warning")
    @warning("NoWarningTable")
  endif

  selectObject(.table)
  .row = Search column: "code", .code$
  if .row
    Set numeric value: .row, "issued", 1
  else
#     appendInfoLine: "no such warning!"
    @addWarning("NoSuchWarning", "A warning has been issued for a non-existing code")
    @warning("NoSuchWarning")
  endif
  
#   appendInfoLine: "selected in warn", .selected
  @restoreSavedSelection(.selected)
  removeObject(.selected)
#   appendInfoLine: "removed ", .selected
endproc
